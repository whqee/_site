[ { "title": "编译你的第一个安卓APP（使用命令行，而不是Android Studio）", "url": "/posts/build-the-first-android-app/", "categories": "效率工具、实用技能, 桌面版Linux", "tags": "安装桌面版Linux", "date": "2020-04-09 21:00:00 +0800", "snippet": "笔者环境：Linux一、下载工具，准备开发环境（先安装好java开发环境，比如open-jdk）到 https://developer.android.google.cn/studio 下载command line tools：在任意位置新建一个文件夹，任意名称，我命名为android_sdk，把下载的commandlinetools解压到这里。查看usage: tools/bin/sdkmanager --help列出可安装的内容:12345678910111213[whqee@whqee android_sdk]$ tools/bin/sdkmanager --sdk_root=. ..." }, { "title": "使用vbirtualbox安装Linux到本地硬盘(图解、详细)", "url": "/posts/install-linux-on-disk-by-vbox/", "categories": "效率工具、实用技能, 桌面版Linux", "tags": "安装桌面版Linux", "date": "2020-03-13 20:00:00 +0800", "snippet": "本次demo材料：华硕顽石4代(16年买的机器)、virtualbox、gnome版manjaro 19.02(2020 4月8日更：我又用gnome版的20.0-pre1在linux上用vbox装了一次，没毛病。) 若你的材料不一样，可能会grub安装失败，百度下就好，百度了还不行可以邮箱我 分区最好都加上label （在第二轮测试中，我用了xfce19.02,并且没有新建efi分区而是用了旧的，最后步骤的‘安装grub’失败，原因不明。安装grub可以百度一下，很多答案，暂不post，搞不定可以私我～）以WIN10为例： 思路：让我们要装系统的硬盘脱离当前系统的管理，起码要有..." }, { "title": "进程？线程？一文读懂！（由来+概念）", "url": "/posts/process-and-thread/", "categories": "软、硬件编程, Linux", "tags": "进程和线程", "date": "2020-03-04 21:00:00 +0800", "snippet": " 本文面向所有想要/需要了解操作系统进程和线程的人。请暂时忘掉你从第三方获得的相关知识，本文将带你从操作系统创作者视角来看进程和线程。如果你只想看结果，你可以直接跳到后半部分。　　只讲事实存在的设计，放心，不会扯底层的代码细节。内核里一个container_of宏的实现就相当于一道高考数学压轴题了，这样的细节多得不得了，这不是我们的关注点。借用linus的话就是，如果你觉得不好用你就自己去改。那时候才是你去深究它的实现细节的时候。　　如果你没有数字电路的基础、没有了解过汇编，那么，为了让你更容易理解此文，我先告诉你一个事实： ——对于现今主流数字电路CPU而言，它只认得高、低电平(高..." }, { "title": "Linux LED驱动--寄存器版", "url": "/posts/ldd-ledv1/", "categories": "软、硬件编程, Linux驱动", "tags": "MYS-6ULX-IOT, Linux驱动", "date": "2019-07-11 14:00:00 +0800", "snippet": "今天啥都不想做，想想那就来记录一下吧，话说有九个月没写了……从STM32F429换到了MYS-6ULX-IOT（imx.6ull, ARM Cortex A7），中文英文的书都看了好几本，写了一些驱动，突然想写点教程，那么，先从点灯开始写吧…… 在这之前，我已经看了《Linux Device Drivers Development Develop customized drivers for embedded Linux》七章有多了，然后实践是跟着这本《Linux Driver Development for Embedded Processors Second Edition》，对我..." }, { "title": "ARMv7-M 汇编指令", "url": "/posts/armv7m/", "categories": "软、硬件编程, ARM", "tags": "ARM", "date": "2019-04-20 20:00:00 +0800", "snippet": "嵌入式原理的作业：收录并打印所有CMSIS-core的函数和ARMv7-M和A的汇编指令……下面内容翻译自《ARMv7-M Architecture Reference Manual》ARMv7架构：ARMv7-A: Application profile，支持ARM和Thumb指令集，要求硬件的内存管理模型支持虚拟内存地址。ARMv7-R: Real-time profile,支持ARM和Thumb指令集，要求硬件的内存管理模型只支持物理地址。ARMv7-M: microcontroller profile,只支持Thumb指令集，指令的大小和操作的准确完成比绝对性能..." }, { "title": "Makefile技巧记录/收录", "url": "/posts/makefile-smart-ways/", "categories": "软、硬件编程, 自动化构建", "tags": "Makefile", "date": "2019-03-12 20:00:00 +0800", "snippet": "wildcard递归列出目标1234567891011# Make does not offer a recursive wildcard function, so here&#39;s one:rwildcard=$(wildcard $1$2) $(foreach d,$(wildcard $1*),$(call rwildcard,$d/,$2))# How to recursively find all files with the same name in a given folderALL_MAIN_C := $(call rwildcard,,main.c)# How to..." }, { "title": "STM32 printf重定向，支持浮点", "url": "/posts/redef-printf-gcc/", "categories": "软、硬件编程, STM32", "tags": "STM32", "date": "2019-03-02 18:55:00 +0800", "snippet": "添加如下代码：12345678910111213141516171819#include &quot;stdio.h&quot;#include &quot;stdlib.h&quot;#ifdef __GNUC__#define PUTCHAR_PROTOTYPE int __io_putchar(int ch)#else#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)#endif#define USARTx huart1PUTCHAR_PROTOTYPE{ HAL_UART_Transmit(&amp;amp;USARTx..." }, { "title": "Linux下stm32开发环境搭建 -- Beginning STM32 Developing with GCC (1)", "url": "/posts/beginning-stm32-Developing-with-GCC-1/", "categories": "软、硬件编程, STM32", "tags": "STM32", "date": "2018-10-21 18:14:00 +0800", "snippet": "all was tested on linux mint 19一、软件清单gcc-arm-none-eabi-toolchain(交叉编译工具链), VSCode(用来编辑), OpenOCD(调试/下载),STM32CubeMX(使用ST的HAL/LL库)请读者先去了解清楚下面的问题再往下阅读:什么是编译工具链？gcc-arm-none-eabi-toolchain与PC本地的gcc、keil ARMCC和IAR ICC有什么不同？gcc-arm-none-eabi-toolchain中的eabi有什么含义？什么是openocd？openocd和jlink、stlink的区别？什么是S..." }, { "title": "openocd的使用", "url": "/posts/openocd-usage-for-stm32/", "categories": "软、硬件编程, STM32", "tags": "OpenOCD", "date": "2018-09-24 00:00:00 +0800", "snippet": "来自我的CSDN，原文： https://blog.csdn.net/baidu_36482169/article/details/81005060一、openocd安装使用遇到的问题：sudo apt-get install 的openocd-0.10.0，玩着Nucleo STM32L496，flash erase…不行：1234&amp;gt; flash erase_sector 0 0 255 Cannot identify target as a STM32L4 family. auto_probe failed in procedure &#39;tar..." } ]
